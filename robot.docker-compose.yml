
services:
  robot_zookeeper:
    networks:
      - robot_net
    image: 'bitnami/zookeeper:latest'
    hostname: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  robot_broker:
    networks:
      - robot_net
    image: 'bitnami/kafka:3.4'
    ports:
      - '9031:9031'
    hostname: broker
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENERS=CLIENT://:29000,EXTERNAL://:9031
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://broker:29000,EXTERNAL://localhost:9031
    depends_on:
      - robot_zookeeper
    healthcheck:
      test: /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:29000 --list
      interval: 2s
      start_period: 10s
      timeout: 15s
      retries: 100

  robot_kafka_ui:
    networks:
      - robot_net
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '9021:8080'
    depends_on:
      - robot_broker
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29000

  robot_monitor:
    networks:
      - robot_net
    image: delivery-monitor:latest
    depends_on:
      robot_broker:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'

  robot_comms:
    hostname: robot-com
    networks:
      - robot_net
      - comms_net
    image: delivery-communication:latest
    depends_on:
      - 'robot_monitor'
    #    ports:
    #      - '9011:9011'
    environment:
      PORT: 9011
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'
      MESSAGES: 'ccu.DeliveryStatusRequest,ccu.NewTaskRequest'
      SERVER_URI: 'server-com:9010'

  robot_hmi:
    networks:
      - robot_net
    image: delivery-hmi:latest
    ports:
      - "9041:8888"
    depends_on:
      - robot_monitor
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'

  robot_motion:
    networks:
      - robot_net
    image: delivery-motion:latest
    depends_on:
      - robot_monitor
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'

  robot_odom:
    networks:
      - robot_net
    image: delivery-odometer:latest
    depends_on:
      - robot_monitor
      - robot_motion
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'

  robot_odom2:
    networks:
      - robot_net
    image: delivery-odometer:latest
    depends_on:
      - robot_monitor
      - robot_motion
    environment:
      SERVICE_NAME: 'odom2'
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'

  robot_location:
    networks:
      - robot_net
    image: delivery-location:latest
    depends_on:
      - robot_monitor
      - robot_odom
      - robot_odom2
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'
      SPEED_TAMPERED_TRIGGER: 5
      DISTANCE_TAMPERED_TRIGGER: 50
      UPDATE_INTERVAL_SEC: 10
      SERVICES: 'odom,odom2'

  robot_sensors:
    networks:
      - robot_net
    image: delivery-sensors:latest
    depends_on:
      - robot_monitor
      - robot_location
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'

  robot_locker:
    networks:
      - robot_net
    image: delivery-locker:latest
    depends_on:
      - robot_monitor
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'

  robot_central:
    networks:
      - robot_net
    image: delivery-central:latest
    restart: always
    depends_on:
      - robot_monitor
      - robot_comms
      - robot_motion
      - robot_location
      - robot_sensors
      - robot_locker
      - robot_hmi
    volumes:
      - ./certs/secret_keystore.p12:/app/secret_keystore.p12:ro
      - ./certs/client_sign_keystore.p12:/app/client_sign_keystore.p12:ro
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'broker:29000'
      SIGN_KS_PATH: '/app/client_sign_keystore.p12'
      SIGN_KS_PASS: 'uogh7noh4Ree8huZ9shae7vi6ohphohj'
      AES_KS_PATH: '/app/secret_keystore.p12'
      AES_KS_PASS: 'kiuw2ka7ahSeeTh2wieb6ohy1Xu3haj4'

networks:
  robot_net:
    driver: bridge
  comms_net:
    external: true